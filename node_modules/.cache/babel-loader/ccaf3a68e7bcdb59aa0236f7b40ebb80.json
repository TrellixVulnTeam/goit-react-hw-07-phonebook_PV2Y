{"ast":null,"code":"import _classCallCheck from\"E:/Github/react-01/goit-react-hw-07-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"E:/Github/react-01/goit-react-hw-07-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"E:/Github/react-01/goit-react-hw-07-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"E:/Github/react-01/goit-react-hw-07-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from\"react\";import{connect}from\"react-redux\";import{phonebookOperations}from\"../../redux/phonebook/\";import shortId from\"shortid\";import\"./ContactForm.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactForm=/*#__PURE__*/function(_Component){_inherits(ContactForm,_Component);var _super=_createSuper(ContactForm);function ContactForm(){var _this;_classCallCheck(this,ContactForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={name:\"\",number:\"\"};_this.nameInputId=shortId.generate();_this.phoneInputId=shortId.generate();_this.handleNameChange=function(event){_this.setState({name:event.currentTarget.value});};_this.handlePhoneChange=function(event){_this.setState({number:event.currentTarget.value});};_this.handleSubmit=function(e){e.preventDefault();_this.props.onSubmit(_this.state);_this.reset();};_this.reset=function(){_this.setState({name:\"\",number:\"\"});};return _this;}_createClass(ContactForm,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:this.handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label\",htmlFor:this.nameInputId,children:[/*#__PURE__*/_jsx(\"span\",{className:\"form-label-title\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"text\",id:this.nameInputId,value:this.state.name,onChange:this.handleNameChange,name:\"name\",pattern:\"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",title:\"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",required:true})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"form-label\",htmlFor:this.phoneInputId,children:[/*#__PURE__*/_jsx(\"span\",{className:\"form-label-title\",children:\"Number\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"tel\",id:this.phoneInputId,value:this.state.number,name:\"number\",onChange:this.handlePhoneChange,pattern:\"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",title:\"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0446\\u0438\\u0444\\u0440 \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u044B, \\u0442\\u0438\\u0440\\u0435, \\u043A\\u0440\\u0443\\u0433\\u043B\\u044B\\u0435 \\u0441\\u043A\\u043E\\u0431\\u043A\\u0438 \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u043D\\u0430\\u0447\\u0438\\u043D\\u0430\\u0442\\u044C\\u0441\\u044F \\u0441 +\",required:true}),/*#__PURE__*/_jsx(\"button\",{className:\"form-button button\",type:\"submit\",children:\"Add contact\"})]})]});}}]);return ContactForm;}(Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSubmit:function onSubmit(_ref){var name=_ref.name,number=_ref.number;return dispatch(phonebookOperations.addContact(name,number));}};};export default connect(null,mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["Component","connect","phonebookOperations","shortId","ContactForm","state","name","number","nameInputId","generate","phoneInputId","handleNameChange","event","setState","currentTarget","value","handlePhoneChange","handleSubmit","e","preventDefault","props","onSubmit","reset","mapDispatchToProps","dispatch","addContact"],"mappings":"goBAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,mBAAT,KAAoC,wBAApC,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,MAAO,oBAAP,C,2FAGMC,CAAAA,W,+UACJC,K,CAAQ,CACNC,IAAI,CAAE,EADA,CAENC,MAAM,CAAE,EAFF,C,OAKRC,W,CAAcL,OAAO,CAACM,QAAR,E,OACdC,Y,CAAeP,OAAO,CAACM,QAAR,E,OAEfE,gB,CAAmB,SAACC,KAAD,CAAW,CAC5B,MAAKC,QAAL,CAAc,CAAEP,IAAI,CAAEM,KAAK,CAACE,aAAN,CAAoBC,KAA5B,CAAd,EACD,C,OAEDC,iB,CAAoB,SAACJ,KAAD,CAAW,CAC7B,MAAKC,QAAL,CAAc,CAAEN,MAAM,CAAEK,KAAK,CAACE,aAAN,CAAoBC,KAA9B,CAAd,EACD,C,OAEDE,Y,CAAe,SAACC,CAAD,CAAO,CACpBA,CAAC,CAACC,cAAF,GAEA,MAAKC,KAAL,CAAWC,QAAX,CAAoB,MAAKhB,KAAzB,EAEA,MAAKiB,KAAL,GACD,C,OAEDA,K,CAAQ,UAAM,CACZ,MAAKT,QAAL,CAAc,CAAEP,IAAI,CAAE,EAAR,CAAYC,MAAM,CAAE,EAApB,CAAd,EACD,C,6DAED,iBAAS,CACP,mBACE,cAAM,SAAS,CAAC,MAAhB,CAAuB,QAAQ,CAAE,KAAKU,YAAtC,wBACE,eAAO,SAAS,CAAC,YAAjB,CAA8B,OAAO,CAAE,KAAKT,WAA5C,wBACE,aAAM,SAAS,CAAC,kBAAhB,kBADF,cAEE,cACE,SAAS,CAAC,OADZ,CAEE,IAAI,CAAC,MAFP,CAGE,EAAE,CAAE,KAAKA,WAHX,CAIE,KAAK,CAAE,KAAKH,KAAL,CAAWC,IAJpB,CAKE,QAAQ,CAAE,KAAKK,gBALjB,CAME,IAAI,CAAC,MANP,CAOE,OAAO,CAAC,wHAPV,CAQE,KAAK,CAAC,icARR,CASE,QAAQ,KATV,EAFF,GADF,cAeE,eAAO,SAAS,CAAC,YAAjB,CAA8B,OAAO,CAAE,KAAKD,YAA5C,wBACE,aAAM,SAAS,CAAC,kBAAhB,oBADF,cAEE,cACE,SAAS,CAAC,OADZ,CAEE,IAAI,CAAC,KAFP,CAGE,EAAE,CAAE,KAAKA,YAHX,CAIE,KAAK,CAAE,KAAKL,KAAL,CAAWE,MAJpB,CAKE,IAAI,CAAC,QALP,CAME,QAAQ,CAAE,KAAKS,iBANjB,CAOE,OAAO,CAAC,wFAPV,CAQE,KAAK,CAAC,+hBARR,CASE,QAAQ,KATV,EAFF,cAaE,eAAQ,SAAS,CAAC,oBAAlB,CAAuC,IAAI,CAAC,QAA5C,yBAbF,GAfF,GADF,CAmCD,C,yBAjEuBhB,S,EAwE1B,GAAMuB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCH,QAAQ,CAAE,2BAAGf,CAAAA,IAAH,MAAGA,IAAH,CAASC,MAAT,MAASA,MAAT,OACRiB,CAAAA,QAAQ,CAACtB,mBAAmB,CAACuB,UAApB,CAA+BnB,IAA/B,CAAqCC,MAArC,CAAD,CADA,EAD8B,CAAf,EAA3B,CAKA,cAAeN,CAAAA,OAAO,CAAC,IAAD,CAAOsB,kBAAP,CAAP,CAAkCnB,WAAlC,CAAf","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { phonebookOperations } from \"../../redux/phonebook/\";\nimport shortId from \"shortid\";\nimport \"./ContactForm.scss\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortId.generate();\n  phoneInputId = shortId.generate();\n\n  handleNameChange = (event) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handlePhoneChange = (event) => {\n    this.setState({ number: event.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label className=\"form-label\" htmlFor={this.nameInputId}>\n          <span className=\"form-label-title\">Name</span>\n          <input\n            className=\"input\"\n            type=\"text\"\n            id={this.nameInputId}\n            value={this.state.name}\n            onChange={this.handleNameChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className=\"form-label\" htmlFor={this.phoneInputId}>\n          <span className=\"form-label-title\">Number</span>\n          <input\n            className=\"input\"\n            type=\"tel\"\n            id={this.phoneInputId}\n            value={this.state.number}\n            name=\"number\"\n            onChange={this.handlePhoneChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          <button className=\"form-button button\" type=\"submit\">\n            Add contact\n          </button>\n        </label>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(phonebookOperations.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n"]},"metadata":{},"sourceType":"module"}