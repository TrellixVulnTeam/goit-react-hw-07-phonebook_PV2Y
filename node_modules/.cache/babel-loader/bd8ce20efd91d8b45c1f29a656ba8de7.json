{"ast":null,"code":"import{createSelector}from\"@reduxjs/toolkit\";export var getIsLoading=function getIsLoading(state){return state.contacts.loading;};export var getFilter=function getFilter(state){return state.contacts.filter;};export var getAllContacts=function getAllContacts(state){return state.contacts.items;};export var getFilteredContacts=createSelector([getAllContacts,getFilter],function(allContacts,filter){var normalizedFilter=filter.toLowerCase();return allContacts.filter(function(_ref){var name=_ref.name;return name.toLowerCase().includes(normalizedFilter);});});// export const getFilteredContacts = state => {\n//     const filter = getFilter(state);\n//     const allContacts = getAllContacts(state);\n//     const normalizedFilter = filter.toLowerCase();\n//      return allContacts.filter(({ name }) =>\n//        name.toLowerCase().includes(normalizedFilter)\n//      );\n// }","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/redux/phonebook/phonebook-selectors.js"],"names":["createSelector","getIsLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getFilteredContacts","allContacts","normalizedFilter","toLowerCase","name","includes"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAN,CAAeC,OAA1B,EAArB,CACP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACH,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAN,CAAeG,MAA1B,EAAlB,CACP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACL,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAN,CAAeK,KAA1B,EAAvB,CAEP,MAAO,IAAMC,CAAAA,mBAAmB,CAAGT,cAAc,CAC/C,CAACO,cAAD,CAAiBF,SAAjB,CAD+C,CAE/C,SAACK,WAAD,CAAcJ,MAAd,CAAyB,CACvB,GAAMK,CAAAA,gBAAgB,CAAGL,MAAM,CAACM,WAAP,EAAzB,CACA,MAAOF,CAAAA,WAAW,CAACJ,MAAZ,CAAmB,kBAAGO,CAAAA,IAAH,MAAGA,IAAH,OACxBA,CAAAA,IAAI,CAACD,WAAL,GAAmBE,QAAnB,CAA4BH,gBAA5B,CADwB,EAAnB,CAAP,CAGD,CAP8C,CAA1C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getIsLoading = (state) => state.contacts.loading;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// export const getFilteredContacts = state => {\r\n//     const filter = getFilter(state);\r\n//     const allContacts = getAllContacts(state);\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//      return allContacts.filter(({ name }) =>\r\n//        name.toLowerCase().includes(normalizedFilter)\r\n//      );\r\n\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}