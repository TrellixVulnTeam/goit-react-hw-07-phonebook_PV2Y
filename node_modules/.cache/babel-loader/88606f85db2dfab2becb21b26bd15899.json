{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\react-01\\\\goit-react-hw-07-phonebook\\\\src\\\\App.js\";\nimport { Component } from 'react';\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport \"./styles.css\";\nimport \"./App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phonebook\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Phonebook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ContactForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this);\n  }\n\n} // const App = () => {\n//   return (\n//     <div className=\"App\">\n//       <div className=\"container\">\n//         <div className=\"phonebook\">\n//           <h1>Phonebook</h1>\n//           <ContactForm />\n//           <h2>Contacts</h2>\n//           <Filter />\n//           <ContactList />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n\nexport default App; // class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: '',\n//   };\n//   handleSearchChange = event => {\n//     this.setState({ filter: event.currentTarget.value });\n//   };\n//   formSubmitHandler = data => {\n//     const { name, number } = data;\n//     const normalizedName = name.toLowerCase();\n//     if (\n//       this.state.contacts.find(\n//         ({ name }) => name.toLowerCase() === normalizedName,\n//       )\n//     ) {\n//       return alert(`${name} is already in contacts.`);\n//     }\n//     this.setState(prevState => ({\n//       contacts: [\n//         ...prevState.contacts,\n//         { id: shortId.generate(), name, number },\n//       ],\n//     }));\n//   };\n//   getFilteredContacts = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n//   deleteContact = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     const parsedContacts = JSON.parse(contacts);\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n//   render() {\n//     const filteredContacts = this.getFilteredContacts();\n//     return (\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <div className=\"phonebook\">\n//             <h1>Phonebook</h1>\n//             <ContactForm\n//             onSubmit={this.formSubmitHandler}\n//             />\n//             <h2>Contacts</h2>\n//             <Filter\n//               value={this.state.filter}\n//               onChange={this.handleSearchChange}\n//             />\n//             <ContactList\n//               contacts={contacts}\n//               onDeleteContact={this.deleteContact}\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/App.js"],"names":["Component","Filter","ContactForm","ContactList","App","render"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAO,cAAP;AACA,OAAO,YAAP;;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAE1BK,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAYC;;AAfuB,C,CAmB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeD,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import {Component} from 'react';\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport \"./styles.css\";\nimport \"./App.scss\";\n\n\nclass App extends Component {\n\n  render() {  \n    return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"phonebook\">\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );}\n}\n\n\n// const App = () => {\n//   return (\n//     <div className=\"App\">\n//       <div className=\"container\">\n//         <div className=\"phonebook\">\n//           <h1>Phonebook</h1>\n//           <ContactForm />\n//           <h2>Contacts</h2>\n//           <Filter />\n//           <ContactList />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\nexport default App;\n\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: '',\n//   };\n\n//   handleSearchChange = event => {\n//     this.setState({ filter: event.currentTarget.value });\n//   };\n\n//   formSubmitHandler = data => {\n//     const { name, number } = data;\n//     const normalizedName = name.toLowerCase();\n\n//     if (\n//       this.state.contacts.find(\n//         ({ name }) => name.toLowerCase() === normalizedName,\n//       )\n//     ) {\n//       return alert(`${name} is already in contacts.`);\n//     }\n\n//     this.setState(prevState => ({\n//       contacts: [\n//         ...prevState.contacts,\n//         { id: shortId.generate(), name, number },\n//       ],\n//     }));\n//   };\n\n//   getFilteredContacts = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n\n//   deleteContact = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     const parsedContacts = JSON.parse(contacts);\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   render() {\n//     const filteredContacts = this.getFilteredContacts();\n//     return (\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <div className=\"phonebook\">\n//             <h1>Phonebook</h1>\n//             <ContactForm\n//             onSubmit={this.formSubmitHandler}\n//             />\n//             <h2>Contacts</h2>\n//             <Filter\n//               value={this.state.filter}\n//               onChange={this.handleSearchChange}\n//             />\n//             <ContactList\n//               contacts={contacts}\n//               onDeleteContact={this.deleteContact}\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}