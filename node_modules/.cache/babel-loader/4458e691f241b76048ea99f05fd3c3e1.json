{"ast":null,"code":"import{connect}from\"react-redux\";import phonebookActions from\"../../redux/phonebook/phonebook-actions\";import ContactListItem from\"./ContactListItem\";import\"./ContactList.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";var ContactList=function ContactList(_ref){var contacts=_ref.contacts,onDeleteContact=_ref.onDeleteContact;return/*#__PURE__*/_jsx(\"ul\",{className:\"contact-list\",children:contacts.map(function(contact){return/*#__PURE__*/_jsx(ContactListItem,{id:contact.id,name:contact.name,number:contact.number,onDeleteContact:onDeleteContact},contact.id);})});};var getFilteredContacts=function getFilteredContacts(allContacts,filter){var normalizedFilter=filter.toLowerCase();return allContacts.filter(function(contact){return contact.name.toLowerCase().includes(normalizedFilter);});};var mapStateToProps=function mapStateToProps(_ref2){var _ref2$contacts=_ref2.contacts,items=_ref2$contacts.items,filter=_ref2$contacts.filter;return{contacts:getFilteredContacts(items,filter)};};// const mapStateToProps = (state) => ({\n//   contacts: getFilteredContacts(state.phonebook.items, state.phonebook.filter),\n// });\n// const mapStateToProps = (state) => {\n//   const { filter, items } = state.phonebook;\n//   const filteredContacts = getFilteredContacts(items, filter);\n//   return {\n//     contacts: filteredContacts,\n//   };\n// };\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{onDeleteContact:function onDeleteContact(contactId){return dispatch(phonebookActions.deleteContact(contactId));}};};export default connect(mapStateToProps,mapDispatchToProps)(ContactList);","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/components/ContactList/ContactList.jsx"],"names":["connect","phonebookActions","ContactListItem","ContactList","contacts","onDeleteContact","map","contact","id","name","number","getFilteredContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","mapStateToProps","items","mapDispatchToProps","dispatch","contactId","deleteContact"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yCAA7B,CAEA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA,MAAO,oBAAP,C,2CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,UAAGC,CAAAA,QAAH,MAAGA,QAAH,CAAaC,eAAb,MAAaA,eAAb,oBAClB,WAAI,SAAS,CAAC,cAAd,UACGD,QAAQ,CAACE,GAAT,CAAa,SAACC,OAAD,qBACZ,KAAC,eAAD,EACE,EAAE,CAAEA,OAAO,CAACC,EADd,CAGE,IAAI,CAAED,OAAO,CAACE,IAHhB,CAIE,MAAM,CAAEF,OAAO,CAACG,MAJlB,CAKE,eAAe,CAAEL,eALnB,EAEOE,OAAO,CAACC,EAFf,CADY,EAAb,CADH,EADkB,EAApB,CAkBA,GAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,WAAD,CAAcC,MAAd,CAAyB,CACnD,GAAMC,CAAAA,gBAAgB,CAAGD,MAAM,CAACE,WAAP,EAAzB,CACA,MAAOH,CAAAA,WAAW,CAACC,MAAZ,CAAmB,SAACN,OAAD,QACxBA,CAAAA,OAAO,CAACE,IAAR,CAAaM,WAAb,GAA2BC,QAA3B,CAAoCF,gBAApC,CADwB,EAAnB,CAAP,CAGD,CALD,CAOA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,iCAAGb,QAAH,CAAec,KAAf,gBAAeA,KAAf,CAAsBL,MAAtB,gBAAsBA,MAAtB,OAAsC,CAC5DT,QAAQ,CAAEO,mBAAmB,CAACO,KAAD,CAAQL,MAAR,CAD+B,CAAtC,EAAxB,CAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCf,eAAe,CAAE,yBAACgB,SAAD,QACfD,CAAAA,QAAQ,CAACnB,gBAAgB,CAACqB,aAAjB,CAA+BD,SAA/B,CAAD,CADO,EADuB,CAAf,EAA3B,CAKA,cAAerB,CAAAA,OAAO,CAACiB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6ChB,WAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport phonebookActions from \"../../redux/phonebook/phonebook-actions\";\n\nimport ContactListItem from \"./ContactListItem\";\n\nimport \"./ContactList.scss\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className=\"contact-list\">\n    {contacts.map((contact) => (\n      <ContactListItem\n        id={contact.id}\n        key={contact.id}\n        name={contact.name}\n        number={contact.number}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nconst getFilteredContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilteredContacts(items, filter),\n});\n\n// const mapStateToProps = (state) => ({\n//   contacts: getFilteredContacts(state.phonebook.items, state.phonebook.filter),\n// });\n\n// const mapStateToProps = (state) => {\n//   const { filter, items } = state.phonebook;\n//   const filteredContacts = getFilteredContacts(items, filter);\n//   return {\n//     contacts: filteredContacts,\n//   };\n// };\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (contactId) =>\n    dispatch(phonebookActions.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n"]},"metadata":{},"sourceType":"module"}