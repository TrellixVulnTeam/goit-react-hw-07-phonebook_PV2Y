{"ast":null,"code":"import shortId from \"shortid\";\nimport axios from 'axios';\nimport { createAction } from \"@reduxjs/toolkit\";\nimport { number } from \"prop-types\";\naxios.defaults.baseURL = 'http://localhost:3000/';\n\nconst addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number\n  };\n  dispatch({\n    type: \"contacts/addContactRequest\"\n  });\n  axios.post(\"/contacts\", contact).then(({\n    data\n  }) => dispatch({\n    type: \"contacts/addContactSuccess\",\n    payload: data\n  })).catch(error => dispatch({\n    type: \"contacts/addContactError\",\n    payload: error\n  }));\n}; // const addContact = createAction(\"contacts/Add\", ({ name, number }) => ({\n//   payload: {\n//     id: shortId.generate(),\n//     name,\n//     number,\n//   },\n// }));\n\n\nconst deleteContact = createAction(\"contacts/Delete\");\nconst filter = createAction(\"contacts/Filter\");\nconst actions = {\n  addContact,\n  deleteContact,\n  filter\n};\nexport default actions; // / WITHOUT REDUX TOOLKIT\n// import shortId from 'shortid';\n// import actionTypes from './phonebook-types'\n// const addContact = ({name, number}) => (\n//     {\n//         type: actionTypes.ADD,\n//         payload: {\n//              id: shortId.generate(),\n//              name,\n//              number\n//         }\n//     }\n// )\n// const deleteContact = (contactId) => (\n//     {\n//   type: actionTypes.DELETE,\n//   payload: contactId,\n//   })\n//   const filter = (value) => ({\n//     type: actionTypes.FILTER,\n//     payload: value,\n//   });\n// export default { addContact, deleteContact, filter };","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/redux/phonebook/phonebook-actions.js"],"names":["shortId","axios","createAction","number","defaults","baseURL","addContact","name","dispatch","contact","type","post","then","data","payload","catch","error","deleteContact","filter","actions"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,MAAT,QAAuB,YAAvB;AAGAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,wBAAzB;;AAEA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOJ,MAAP,KAAkBK,QAAQ,IAAI;AAC/C,QAAMC,OAAO,GAAG;AAACF,IAAAA,IAAD;AAAOJ,IAAAA;AAAP,GAAhB;AAEAK,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AAEAT,EAAAA,KAAK,CACFU,IADH,CACQ,WADR,EACqBF,OADrB,EAEGG,IAFH,CAEQ,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACJL,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,4BAAR;AAAsCI,IAAAA,OAAO,EAAED;AAA/C,GAAD,CAHZ,EAKGE,KALH,CAKUC,KAAD,IAAWR,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,0BAAR;AAAoCI,IAAAA,OAAO,EAAEE;AAA7C,GAAD,CAL5B;AAMD,CAXD,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,aAAa,GAAGf,YAAY,CAAC,iBAAD,CAAlC;AACA,MAAMgB,MAAM,GAAGhB,YAAY,CAAC,iBAAD,CAA3B;AAEA,MAAMiB,OAAO,GAAG;AAAEb,EAAAA,UAAF;AAAcW,EAAAA,aAAd;AAA6BC,EAAAA;AAA7B,CAAhB;AAEA,eAAeC,OAAf,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import shortId from \"shortid\";\nimport axios from 'axios';\nimport { createAction } from \"@reduxjs/toolkit\";\nimport { number } from \"prop-types\";\n\n\naxios.defaults.baseURL = 'http://localhost:3000/'\n\nconst addContact = (name, number) => dispatch => {\n  const contact = {name, number};\n\n  dispatch({ type: \"contacts/addContactRequest\" });\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) =>\n      dispatch({ type: \"contacts/addContactSuccess\", payload: data })\n    )\n    .catch((error) => dispatch({ type: \"contacts/addContactError\", payload: error }));\n}\n  \n\n// const addContact = createAction(\"contacts/Add\", ({ name, number }) => ({\n//   payload: {\n//     id: shortId.generate(),\n//     name,\n//     number,\n//   },\n// }));\n\nconst deleteContact = createAction(\"contacts/Delete\");\nconst filter = createAction(\"contacts/Filter\");\n\nconst actions = { addContact, deleteContact, filter };\n\nexport default actions;\n\n// / WITHOUT REDUX TOOLKIT\n\n// import shortId from 'shortid';\n// import actionTypes from './phonebook-types'\n\n// const addContact = ({name, number}) => (\n//     {\n//         type: actionTypes.ADD,\n//         payload: {\n//              id: shortId.generate(),\n//              name,\n//              number\n//         }\n//     }\n// )\n\n// const deleteContact = (contactId) => (\n//     {\n//   type: actionTypes.DELETE,\n//   payload: contactId,\n//   })\n\n//   const filter = (value) => ({\n//     type: actionTypes.FILTER,\n//     payload: value,\n//   });\n\n// export default { addContact, deleteContact, filter };\n"]},"metadata":{},"sourceType":"module"}