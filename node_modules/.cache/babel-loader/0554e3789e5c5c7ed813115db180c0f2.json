{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\"; // import actionTypes from \"./phonebook-types\";\n\nimport actions from \"./phonebook-actions\";\nconst {\n  addContactRequest,\n  addContactSuccess,\n  addContactError\n} = actions;\nconst items = createReducer([], {\n  addContactSuccess: (state, {\n    payload\n  }) => [...state, payload],\n  [actions.deleteContact]: (state, {\n    payload\n  }) => state.filter(contact => contact.id !== payload)\n});\nconst filter = createReducer(\"\", {\n  [actions.filter]: (_, {\n    payload\n  }) => payload\n});\nexport default combineReducers({\n  items,\n  filter\n}); ///WITHOUT REDUX TOOLKIT\n// import {combineReducers} from 'redux';\n// import actionTypes from './phonebook-types'\n// const items=(state=[], {type, payload}) => {\n//   switch(type) {\n// case actionTypes.ADD:\n//   return [...state, payload];\n//     case actionTypes.DELETE:\n//   return state.filter(contact => contact.id !== payload);\n//     default:\n//     return state;\n//   }\n// }\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//       case actionTypes.FILTER:\n//         return payload;\n//       default:\n//         return state;\n//     }\n// };\n// export default combineReducers({\n//     items,\n//     filter\n// })","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/redux/phonebook/phonebook-reducer.js"],"names":["combineReducers","createReducer","actions","addContactRequest","addContactSuccess","addContactError","items","state","payload","deleteContact","filter","contact","id","_"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,MAAM;AAACC,EAAAA,iBAAD;AAAoBC,EAAAA,iBAApB;AAAuCC,EAAAA;AAAvC,IAA2DH,OAAjE;AAEA,MAAMI,KAAK,GAAGL,aAAa,CAAC,EAAD,EAAK;AAC9BG,EAAAA,iBAAiB,EAAE,CAACG,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KAAwB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CADb;AAE9B,GAACN,OAAO,CAACO,aAAT,GAAyB,CAACF,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KACvBD,KAAK,CAACG,MAAN,CAAcC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeJ,OAAzC;AAH4B,CAAL,CAA3B;AAMA,MAAME,MAAM,GAAGT,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACC,OAAO,CAACQ,MAAT,GAAkB,CAACG,CAAD,EAAI;AAAEL,IAAAA;AAAF,GAAJ,KAAoBA;AADP,CAAL,CAA5B;AAIA,eAAeR,eAAe,CAAC;AAC7BM,EAAAA,KAD6B;AAE7BI,EAAAA;AAF6B,CAAD,CAA9B,C,CAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n// import actionTypes from \"./phonebook-types\";\nimport actions from \"./phonebook-actions\";\n\nconst {addContactRequest, addContactSuccess, addContactError } = actions\n\nconst items = createReducer([], {\n  addContactSuccess: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n\n///WITHOUT REDUX TOOLKIT\n// import {combineReducers} from 'redux';\n// import actionTypes from './phonebook-types'\n\n// const items=(state=[], {type, payload}) => {\n//   switch(type) {\n// case actionTypes.ADD:\n//   return [...state, payload];\n\n//     case actionTypes.DELETE:\n//   return state.filter(contact => contact.id !== payload);\n\n//     default:\n//     return state;\n\n//   }\n\n// }\n\n// const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//       case actionTypes.FILTER:\n//         return payload;\n\n//       default:\n//         return state;\n//     }\n// };\n\n// export default combineReducers({\n//     items,\n//     filter\n// })\n"]},"metadata":{},"sourceType":"module"}