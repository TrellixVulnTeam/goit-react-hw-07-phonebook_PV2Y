{"ast":null,"code":"import{connect}from\"react-redux\";import phonebookOperations from\"../../redux/phonebook/phonebook-operations\";import ContactListItem from\"./ContactListItem\";import\"./ContactList.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";var ContactList=function ContactList(_ref){var contacts=_ref.contacts,onDeleteContact=_ref.onDeleteContact;return/*#__PURE__*/_jsx(\"ul\",{className:\"contact-list\",children:contacts.map(function(contact){return/*#__PURE__*/_jsx(ContactListItem,{id:contact.id,name:contact.name,number:contact.number,onDeleteContact:onDeleteContact},contact.id);})});};var getFilteredContacts=function getFilteredContacts(allContacts,filter){var normalizedFilter=filter.toLowerCase();return allContacts.filter(function(_ref2){var name=_ref2.name;return name.toLowerCase().includes(normalizedFilter);});};var mapStateToProps=function mapStateToProps(_ref3){var _ref3$contacts=_ref3.contacts,items=_ref3$contacts.items,filter=_ref3$contacts.filter;return{contacts:getFilteredContacts(items,filter)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onDeleteContact:function onDeleteContact(contactId){return dispatch(phonebookOperations.deleteContact(contactId));}};};export default connect(mapStateToProps,mapDispatchToProps)(ContactList);","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/components/ContactList/ContactList.jsx"],"names":["connect","phonebookOperations","ContactListItem","ContactList","contacts","onDeleteContact","map","contact","id","name","number","getFilteredContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","mapStateToProps","items","mapDispatchToProps","dispatch","contactId","deleteContact"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,4CAAhC,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAO,oBAAP,C,2CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAmC,IAAhCC,CAAAA,QAAgC,MAAhCA,QAAgC,CAAtBC,eAAsB,MAAtBA,eAAsB,CAErD,mBACA,WAAI,SAAS,CAAC,cAAd,UACGD,QAAQ,CAACE,GAAT,CAAa,SAACC,OAAD,qBACZ,KAAC,eAAD,EACE,EAAE,CAAEA,OAAO,CAACC,EADd,CAGE,IAAI,CAAED,OAAO,CAACE,IAHhB,CAIE,MAAM,CAAEF,OAAO,CAACG,MAJlB,CAKE,eAAe,CAAEL,eALnB,EAEOE,OAAO,CAACC,EAFf,CADY,EAAb,CADH,EADA,CAYA,CAdF,CAuBA,GAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,WAAD,CAAcC,MAAd,CAAyB,CACnD,GAAMC,CAAAA,gBAAgB,CAAGD,MAAM,CAACE,WAAP,EAAzB,CACE,MAAOH,CAAAA,WAAW,CAACC,MAAZ,CAAmB,mBAAEJ,CAAAA,IAAF,OAAEA,IAAF,OAC1BA,CAAAA,IAAI,CAACM,WAAL,GAAmBC,QAAnB,CAA4BF,gBAA5B,CAD0B,EAAnB,CAAP,CAKH,CAPD,CASA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,iCAAGb,QAAH,CAAcc,KAAd,gBAAcA,KAAd,CAAqBL,MAArB,gBAAqBA,MAArB,OAAqC,CAC3DT,QAAQ,CAAEO,mBAAmB,CAACO,KAAD,CAAQL,MAAR,CAD8B,CAArC,EAAxB,CAMA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCf,eAAe,CAAE,yBAACgB,SAAD,QACfD,CAAAA,QAAQ,CAACnB,mBAAmB,CAACqB,aAApB,CAAkCD,SAAlC,CAAD,CADO,EADuB,CAAf,EAA3B,CAKA,cAAerB,CAAAA,OAAO,CAACiB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6ChB,WAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\nimport ContactListItem from \"./ContactListItem\";\nimport \"./ContactList.scss\";\nimport PropTypes from \"prop-types\";\n\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  \n  return (\n  <ul className=\"contact-list\">\n    {contacts.map((contact) => (\n      <ContactListItem\n        id={contact.id}\n        key={contact.id}\n        name={contact.name}\n        number={contact.number}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </ul>\n)};\n\n\n\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nconst getFilteredContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n    return allContacts.filter(({name}) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n\n};\n\nconst mapStateToProps = ({ contacts:{ items, filter } }) => ({\n  contacts: getFilteredContacts(items, filter),\n});\n\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (contactId) =>\n    dispatch(phonebookOperations.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n"]},"metadata":{},"sourceType":"module"}