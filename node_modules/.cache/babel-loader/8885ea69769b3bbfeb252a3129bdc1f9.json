{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\react-01\\\\goit-react-hw-07-phonebook\\\\src\\\\components\\\\Filter\\\\Filter.jsx\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/phonebook/phonebook-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Filter = ({\n  value,\n  onChange\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Find contacts by name\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    name: \"filter\",\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c = Filter;\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/components/Filter/Filter.jsx"],"names":["PropTypes","connect","changeFilter","Filter","value","onChange","propTypes","string","func","mapStateToProps","state","contacts","filter","mapDispatchToProps","dispatch","e","target"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA4B,yCAA5B;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACb;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,KAAK,EAAED,KAHT;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA,gBADF;;KAAMF,M;AAaNA,MAAM,CAACG,SAAP,GAAmB;AACjBF,EAAAA,KAAK,EAAEJ,SAAS,CAACO,MADA;AAEjBF,EAAAA,QAAQ,EAAEL,SAAS,CAACQ;AAFH,CAAnB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,KAAK,EAAEM,KAAK,CAACC,QAAN,CAAeC;AADY,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCT,EAAAA,QAAQ,EAAGU,CAAD,IAAOD,QAAQ,CAACZ,YAAY,CAACa,CAAC,CAACC,MAAF,CAASZ,KAAV,CAAb;AADe,CAAf,CAA3B;;AAIA,eAAeH,OAAO,CAACQ,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CV,MAA7C,CAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport  {changeFilter} from \"../../redux/phonebook/phonebook-actions\";\n\nconst Filter = ({ value, onChange }) => (\n  <>\n    <h3>Find contacts by name</h3>\n    <input\n      type=\"text\"\n      className=\"input\"\n      value={value}\n      name=\"filter\"\n      onChange={onChange}\n    ></input>\n  </>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n"]},"metadata":{},"sourceType":"module"}