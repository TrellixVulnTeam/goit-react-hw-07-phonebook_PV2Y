{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\react-01\\\\goit-react-hw-07-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\nimport shortId from \"shortid\";\nimport \"./ContactForm.scss\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n    this.nameInputId = shortId.generate();\n    this.phoneInputId = shortId.generate();\n\n    this.handleNameChange = event => {\n      this.setState({\n        name: event.currentTarget.value\n      });\n    };\n\n    this.handlePhoneChange = event => {\n      this.setState({\n        number: event.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: \"\",\n        number: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: this.nameInputId,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-label-title\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          id: this.nameInputId,\n          value: this.state.name,\n          onChange: this.handleNameChange,\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: this.phoneInputId,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-label-title\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"tel\",\n          id: this.phoneInputId,\n          value: this.state.number,\n          name: \"number\",\n          onChange: this.handlePhoneChange,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0446\\u0438\\u0444\\u0440 \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u044B, \\u0442\\u0438\\u0440\\u0435, \\u043A\\u0440\\u0443\\u0433\\u043B\\u044B\\u0435 \\u0441\\u043A\\u043E\\u0431\\u043A\\u0438 \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u043D\\u0430\\u0447\\u0438\\u043D\\u0430\\u0442\\u044C\\u0441\\u044F \\u0441 +\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-button button\",\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({\n    name,\n    number\n  }) => dispatch(phonebookOperaions.addContact({\n    name,\n    number\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["Component","connect","phonebookOperations","shortId","PropTypes","ContactForm","state","name","number","nameInputId","generate","phoneInputId","handleNameChange","event","setState","currentTarget","value","handlePhoneChange","handleSubmit","e","preventDefault","props","onSubmit","reset","render","propTypes","func","isRequired","mapDispatchToProps","dispatch","phonebookOperaions","addContact"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCM,KADkC,GAC1B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD0B;AAAA,SAMlCC,WANkC,GAMpBN,OAAO,CAACO,QAAR,EANoB;AAAA,SAOlCC,YAPkC,GAOnBR,OAAO,CAACO,QAAR,EAPmB;;AAAA,SAWlCE,gBAXkC,GAWdC,KAAD,IAAW;AAC5B,WAAKC,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAEM,KAAK,CAACE,aAAN,CAAoBC;AAA5B,OAAd;AACD,KAbiC;;AAAA,SAelCC,iBAfkC,GAebJ,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAEK,KAAK,CAACE,aAAN,CAAoBC;AAA9B,OAAd;AACD,KAjBiC;;AAAA,SAmBlCE,YAnBkC,GAmBlBC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AAEA,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKhB,KAAzB;AAEA,WAAKiB,KAAL;AACD,KAzBiC;;AAAA,SA2BlCA,KA3BkC,GA2B1B,MAAM;AACZ,WAAKT,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAd;AACD,KA7BiC;AAAA;;AA+BlCgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAE,KAAKN,YAAtC;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAE,KAAKT,WAA5C;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,OADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAE,KAAKA,WAHX;AAIE,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,IAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKK,gBALjB;AAME,UAAA,IAAI,EAAC,MANP;AAOE,UAAA,OAAO,EAAC,wHAPV;AAQE,UAAA,KAAK,EAAC,icARR;AASE,UAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAE,KAAKD,YAA5C;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,OADZ;AAEE,UAAA,IAAI,EAAC,KAFP;AAGE,UAAA,EAAE,EAAE,KAAKA,YAHX;AAIE,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,MAJpB;AAKE,UAAA,IAAI,EAAC,QALP;AAME,UAAA,QAAQ,EAAE,KAAKS,iBANjB;AAOE,UAAA,OAAO,EAAC,wFAPV;AAQE,UAAA,KAAK,EAAC,+hBARR;AASE,UAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAaE;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmCD;;AAnEiC;;AAsEpCZ,WAAW,CAACoB,SAAZ,GAAwB;AACtBH,EAAAA,QAAQ,EAAElB,SAAS,CAACsB,IAAV,CAAeC;AADH,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,QAAQ,EAAE,CAAC;AAAEf,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KACRqB,QAAQ,CAACC,kBAAkB,CAACC,UAAnB,CAA8B;AAAExB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA9B,CAAD;AAF8B,CAAf,CAA3B;;AAKA,eAAeP,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCvB,WAAlC,CAAf","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\nimport shortId from \"shortid\";\nimport \"./ContactForm.scss\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortId.generate();\n  phoneInputId = shortId.generate();\n\n\n\n  handleNameChange = (event) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handlePhoneChange = (event) => {\n    this.setState({ number: event.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label className=\"form-label\" htmlFor={this.nameInputId}>\n          <span className=\"form-label-title\">Name</span>\n          <input\n            className=\"input\"\n            type=\"text\"\n            id={this.nameInputId}\n            value={this.state.name}\n            onChange={this.handleNameChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className=\"form-label\" htmlFor={this.phoneInputId}>\n          <span className=\"form-label-title\">Number</span>\n          <input\n            className=\"input\"\n            type=\"tel\"\n            id={this.phoneInputId}\n            value={this.state.number}\n            name=\"number\"\n            onChange={this.handlePhoneChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          <button className=\"form-button button\" type=\"submit\">\n            Add contact\n          </button>\n        </label>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(phonebookOperaions.addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n"]},"metadata":{},"sourceType":"module"}