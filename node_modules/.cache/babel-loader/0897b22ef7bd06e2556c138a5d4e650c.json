{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\react-01\\\\goit-react-hw-07-phonebook\\\\src\\\\components\\\\ContactList\\\\ContactList.jsx\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/phonebook/phonebook-actions\";\nimport ContactListItem from \"./ContactListItem\";\nimport \"./ContactList.scss\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log();\n\nconst ContactList = ({\n  contacts,\n  onDeleteContact\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  className: \"contact-list\",\n  children: contacts.map(contact => /*#__PURE__*/_jsxDEV(ContactListItem, {\n    id: contact.id,\n    name: contact.name,\n    number: contact.number,\n    onDeleteContact: onDeleteContact\n  }, contact.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n_c = ContactList;\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired\n};\n\nconst getFilteredContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({\n  contacts: {\n    items,\n    filter\n  }\n}) => ({\n  contacts: getFilteredContacts(items, filter)\n}); // const mapStateToProps = (state) => ({\n//   contacts: getFilteredContacts(state.phonebook.items, state.phonebook.filter),\n// });\n// const mapStateToProps = (state) => {\n//   const { filter, items } = state.phonebook;\n//   const filteredContacts = getFilteredContacts(items, filter);\n//   return {\n//     contacts: filteredContacts,\n//   };\n// };\n\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId => dispatch(deleteContact(contactId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/components/ContactList/ContactList.jsx"],"names":["connect","deleteContact","ContactListItem","PropTypes","console","log","ContactList","contacts","onDeleteContact","map","contact","id","name","number","propTypes","array","isRequired","getFilteredContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","mapStateToProps","items","mapDispatchToProps","dispatch","contactId"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEAC,OAAO,CAACC,GAAR;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,kBAClB;AAAI,EAAA,SAAS,EAAC,cAAd;AAAA,YACGD,QAAQ,CAACE,GAAT,CAAcC,OAAD,iBACZ,QAAC,eAAD;AACE,IAAA,EAAE,EAAEA,OAAO,CAACC,EADd;AAGE,IAAA,IAAI,EAAED,OAAO,CAACE,IAHhB;AAIE,IAAA,MAAM,EAAEF,OAAO,CAACG,MAJlB;AAKE,IAAA,eAAe,EAAEL;AALnB,KAEOE,OAAO,CAACC,EAFf;AAAA;AAAA;AAAA;AAAA,UADD;AADH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAML,W;AAcNA,WAAW,CAACQ,SAAZ,GAAwB;AACtBP,EAAAA,QAAQ,EAAEJ,SAAS,CAACY,KAAV,CAAgBC;AADJ,CAAxB;;AAIA,MAAMC,mBAAmB,GAAG,CAACC,WAAD,EAAcC,MAAd,KAAyB;AACnD,QAAMC,gBAAgB,GAAGD,MAAM,CAACE,WAAP,EAAzB;AACA,SAAOH,WAAW,CAACC,MAAZ,CAAoBT,OAAD,IACxBA,OAAO,CAACE,IAAR,CAAaS,WAAb,GAA2BC,QAA3B,CAAoCF,gBAApC,CADK,CAAP;AAGD,CALD;;AAOA,MAAMG,eAAe,GAAG,CAAC;AAAEhB,EAAAA,QAAQ,EAAE;AAAEiB,IAAAA,KAAF;AAASL,IAAAA;AAAT;AAAZ,CAAD,MAAsC;AAC5DZ,EAAAA,QAAQ,EAAEU,mBAAmB,CAACO,KAAD,EAAQL,MAAR;AAD+B,CAAtC,CAAxB,C,CAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,eAAe,EAAGmB,SAAD,IAAeD,QAAQ,CAACzB,aAAa,CAAC0B,SAAD,CAAd;AADA,CAAf,CAA3B;;AAIA,eAAe3B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,WAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/phonebook/phonebook-actions\";\nimport ContactListItem from \"./ContactListItem\";\nimport \"./ContactList.scss\";\nimport PropTypes from \"prop-types\";\n\nconsole.log()\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className=\"contact-list\">\n    {contacts.map((contact) => (\n      <ContactListItem\n        id={contact.id}\n        key={contact.id}\n        name={contact.name}\n        number={contact.number}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nconst getFilteredContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilteredContacts(items, filter),\n});\n\n// const mapStateToProps = (state) => ({\n//   contacts: getFilteredContacts(state.phonebook.items, state.phonebook.filter),\n// });\n\n// const mapStateToProps = (state) => {\n//   const { filter, items } = state.phonebook;\n//   const filteredContacts = getFilteredContacts(items, filter);\n//   return {\n//     contacts: filteredContacts,\n//   };\n// };\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (contactId) => dispatch(deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n"]},"metadata":{},"sourceType":"module"}