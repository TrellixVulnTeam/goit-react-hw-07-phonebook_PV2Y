{"ast":null,"code":"// import shortId from \"shortid\";\n// import axios from 'axios';\nimport { createAction } from \"@reduxjs/toolkit\"; // import { number } from \"prop-types\";\n\nexport const fetchContactRequest = createAction(\"contacts/addContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const afetchContactError = createAction(\"contacts/addContactError\");\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\nexport const deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nexport const deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\nexport const changeFilter = createAction(\"contacts/changeFilter\"); // const actions = { addContactRequest, addContactSuccess, addContactError, deleteContact, filter };\n// export default actions;\n// / WITHOUT REDUX TOOLKIT\n// import shortId from 'shortid';\n// import actionTypes from './phonebook-types'\n// const addContact = ({name, number}) => (\n//     {\n//         type: actionTypes.ADD,\n//         payload: {\n//              id: shortId.generate(),\n//              name,\n//              number\n//         }\n//     }\n// )\n// const deleteContact = (contactId) => (\n//     {\n//   type: actionTypes.DELETE,\n//   payload: contactId,\n//   })\n//   const filter = (value) => ({\n//     type: actionTypes.FILTER,\n//     payload: value,\n//   });\n// export default { addContact, deleteContact, filter };","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/redux/phonebook/phonebook-actions.js"],"names":["createAction","fetchContactRequest","fetchContactSuccess","afetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter"],"mappings":"AAAA;AACA;AACA,SAASA,YAAT,QAA6B,kBAA7B,C,CACA;;AAGA,OAAO,MAAMC,mBAAmB,GAAGD,YAAY,CAAC,4BAAD,CAAxC;AACP,OAAO,MAAME,mBAAmB,GAAGF,YAAY,CAAC,4BAAD,CAAxC;AACP,OAAO,MAAMG,kBAAkB,GAAGH,YAAY,CAAC,0BAAD,CAAvC;AAEN,OAAO,MAAMI,iBAAiB,GAAGJ,YAAY,CAAC,4BAAD,CAAtC;AACP,OAAO,MAAMK,iBAAiB,GAAGL,YAAY,CAAC,4BAAD,CAAtC;AACP,OAAO,MAAMM,eAAe,GAAGN,YAAY,CAAC,0BAAD,CAApC;AAER,OAAO,MAAMO,oBAAoB,GAAGP,YAAY,CAAC,+BAAD,CAAzC;AACP,OAAO,MAAMQ,oBAAoB,GAAGR,YAAY,CAAC,+BAAD,CAAzC;AACP,OAAO,MAAMS,kBAAkB,GAAGT,YAAY,CAAC,6BAAD,CAAvC;AAGP,OAAO,MAAMU,YAAY,GAAGV,YAAY,CAAC,uBAAD,CAAjC,C,CAEP;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import shortId from \"shortid\";\n// import axios from 'axios';\nimport { createAction } from \"@reduxjs/toolkit\";\n// import { number } from \"prop-types\";\n\n\nexport const fetchContactRequest = createAction(\"contacts/addContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const afetchContactError = createAction(\"contacts/addContactError\");  \n\n export const addContactRequest = createAction(\"contacts/addContactRequest\");\n export const addContactSuccess = createAction(\"contacts/addContactSuccess\");\n export const addContactError = createAction(\"contacts/addContactError\");  \n\nexport const deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nexport const deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nexport const deleteContactError = createAction(\"contacts/deleteContactError\"); \n\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n// const actions = { addContactRequest, addContactSuccess, addContactError, deleteContact, filter };\n\n// export default actions;\n\n// / WITHOUT REDUX TOOLKIT\n\n// import shortId from 'shortid';\n// import actionTypes from './phonebook-types'\n\n// const addContact = ({name, number}) => (\n//     {\n//         type: actionTypes.ADD,\n//         payload: {\n//              id: shortId.generate(),\n//              name,\n//              number\n//         }\n//     }\n// )\n\n// const deleteContact = (contactId) => (\n//     {\n//   type: actionTypes.DELETE,\n//   payload: contactId,\n//   })\n\n//   const filter = (value) => ({\n//     type: actionTypes.FILTER,\n//     payload: value,\n//   });\n\n// export default { addContact, deleteContact, filter };\n"]},"metadata":{},"sourceType":"module"}