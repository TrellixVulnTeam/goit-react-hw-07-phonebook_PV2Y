{"ast":null,"code":"import{connect}from\"react-redux\";import{phonebookOperations}from\"../../redux/phonebook/\";import ContactListItem from\"./ContactListItem\";import{getFilteredContacts}from\"../../redux/phonebook/phonebook-selectors\";import\"./ContactList.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";var ContactList=function ContactList(_ref){var contacts=_ref.contacts,onDeleteContact=_ref.onDeleteContact;return/*#__PURE__*/_jsx(\"ul\",{className:\"contact-list\",children:contacts.map(function(contact){return/*#__PURE__*/_jsx(ContactListItem,{id:contact.id,name:contact.name,number:contact.number,onDeleteContact:onDeleteContact},contact.id);})});};var mapStateToProps=function mapStateToProps(state){return{contacts:getFilteredContacts(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onDeleteContact:function onDeleteContact(contactId){return dispatch(phonebookOperations.deleteContact(contactId));}};};export default connect(mapStateToProps,mapDispatchToProps)(ContactList);","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/components/ContactList/ContactList.jsx"],"names":["connect","phonebookOperations","ContactListItem","getFilteredContacts","ContactList","contacts","onDeleteContact","map","contact","id","name","number","mapStateToProps","state","mapDispatchToProps","dispatch","contactId","deleteContact"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,OAASC,mBAAT,KAAoC,wBAApC,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OAASC,mBAAT,KAAoC,2CAApC,CACA,MAAO,oBAAP,C,2CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAmC,IAAhCC,CAAAA,QAAgC,MAAhCA,QAAgC,CAAtBC,eAAsB,MAAtBA,eAAsB,CACrD,mBACE,WAAI,SAAS,CAAC,cAAd,UACGD,QAAQ,CAACE,GAAT,CAAa,SAACC,OAAD,qBACZ,KAAC,eAAD,EACE,EAAE,CAAEA,OAAO,CAACC,EADd,CAGE,IAAI,CAAED,OAAO,CAACE,IAHhB,CAIE,MAAM,CAAEF,OAAO,CAACG,MAJlB,CAKE,eAAe,CAAEL,eALnB,EAEOE,OAAO,CAACC,EAFf,CADY,EAAb,CADH,EADF,CAaD,CAdD,CAoBA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCR,QAAQ,CAAEF,mBAAmB,CAACU,KAAD,CADK,CAAZ,EAAxB,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCT,eAAe,CAAE,yBAACU,SAAD,QACfD,CAAAA,QAAQ,CAACd,mBAAmB,CAACgB,aAApB,CAAkCD,SAAlC,CAAD,CADO,EADuB,CAAf,EAA3B,CAKA,cAAehB,CAAAA,OAAO,CAACY,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CV,WAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { phonebookOperations } from \"../../redux/phonebook/\";\nimport ContactListItem from \"./ContactListItem\";\nimport { getFilteredContacts } from \"../../redux/phonebook/phonebook-selectors\";\nimport \"./ContactList.scss\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className=\"contact-list\">\n      {contacts.map((contact) => (\n        <ContactListItem\n          id={contact.id}\n          key={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (contactId) =>\n    dispatch(phonebookOperations.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n"]},"metadata":{},"sourceType":"module"}