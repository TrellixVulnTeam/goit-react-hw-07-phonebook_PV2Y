{"ast":null,"code":"// import shortId from \"shortid\";\n// import axios from 'axios';\nimport{createAction}from\"@reduxjs/toolkit\";// import { number } from \"prop-types\";\nexport var fetchContactsRequest=createAction(\"contacts/fetchContactsRequest\");export var fetchContactsSuccess=createAction(\"contacts/fetchContactsSuccess\");export var fetchContactsError=createAction(\"contacts/fetchContactsError\");export var addContactRequest=createAction(\"contacts/addContactRequest\");export var addContactSuccess=createAction(\"contacts/addContactSuccess\");export var addContactError=createAction(\"contacts/addContactError\");export var deleteContactRequest=createAction(\"contacts/deleteContactRequest\");export var deleteContactSuccess=createAction(\"contacts/deleteContactSuccess\");export var deleteContactError=createAction(\"contacts/deleteContactError\");export var changeFilter=createAction(\"contacts/changeFilter\");// const actions = { addContactRequest, addContactSuccess, addContactError, deleteContact, filter };\n// export default actions;\n// / WITHOUT REDUX TOOLKIT\n// import shortId from 'shortid';\n// import actionTypes from './phonebook-types'\n// const addContact = ({name, number}) => (\n//     {\n//         type: actionTypes.ADD,\n//         payload: {\n//              id: shortId.generate(),\n//              name,\n//              number\n//         }\n//     }\n// )\n// const deleteContact = (contactId) => (\n//     {\n//   type: actionTypes.DELETE,\n//   payload: contactId,\n//   })\n//   const filter = (value) => ({\n//     type: actionTypes.FILTER,\n//     payload: value,\n//   });\n// export default { addContact, deleteContact, filter };","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/redux/phonebook/phonebook-actions.js"],"names":["createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter"],"mappings":"AAAA;AACA;AACA,OAASA,YAAT,KAA6B,kBAA7B,CACA;AAGA,MAAO,IAAMC,CAAAA,oBAAoB,CAAGD,YAAY,CAAC,+BAAD,CAAzC,CACP,MAAO,IAAME,CAAAA,oBAAoB,CAAGF,YAAY,CAAC,+BAAD,CAAzC,CACP,MAAO,IAAMG,CAAAA,kBAAkB,CAAGH,YAAY,CAAC,6BAAD,CAAvC,CAEP,MAAO,IAAMI,CAAAA,iBAAiB,CAAGJ,YAAY,CAAC,4BAAD,CAAtC,CACP,MAAO,IAAMK,CAAAA,iBAAiB,CAAGL,YAAY,CAAC,4BAAD,CAAtC,CACP,MAAO,IAAMM,CAAAA,eAAe,CAAGN,YAAY,CAAC,0BAAD,CAApC,CAEP,MAAO,IAAMO,CAAAA,oBAAoB,CAAGP,YAAY,CAAC,+BAAD,CAAzC,CACP,MAAO,IAAMQ,CAAAA,oBAAoB,CAAGR,YAAY,CAAC,+BAAD,CAAzC,CACP,MAAO,IAAMS,CAAAA,kBAAkB,CAAGT,YAAY,CAAC,6BAAD,CAAvC,CAGP,MAAO,IAAMU,CAAAA,YAAY,CAAGV,YAAY,CAAC,uBAAD,CAAjC,CAEP;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import shortId from \"shortid\";\n// import axios from 'axios';\nimport { createAction } from \"@reduxjs/toolkit\";\n// import { number } from \"prop-types\";\n\n\nexport const fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\nexport const fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");  \n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");  \n\nexport const deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nexport const deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nexport const deleteContactError = createAction(\"contacts/deleteContactError\"); \n\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n// const actions = { addContactRequest, addContactSuccess, addContactError, deleteContact, filter };\n\n// export default actions;\n\n// / WITHOUT REDUX TOOLKIT\n\n// import shortId from 'shortid';\n// import actionTypes from './phonebook-types'\n\n// const addContact = ({name, number}) => (\n//     {\n//         type: actionTypes.ADD,\n//         payload: {\n//              id: shortId.generate(),\n//              name,\n//              number\n//         }\n//     }\n// )\n\n// const deleteContact = (contactId) => (\n//     {\n//   type: actionTypes.DELETE,\n//   payload: contactId,\n//   })\n\n//   const filter = (value) => ({\n//     type: actionTypes.FILTER,\n//     payload: value,\n//   });\n\n// export default { addContact, deleteContact, filter };\n"]},"metadata":{},"sourceType":"module"}