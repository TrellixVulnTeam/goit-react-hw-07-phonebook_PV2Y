{"ast":null,"code":"import { configureStore, getDefaultMiddleware, combineReducers } from \"@reduxjs/toolkit\"; // import logger from \"redux-logger\";\n\nimport { // persistStore,\n// persistReducer,\nFLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport phonebookReducer from \"./phonebook/phonebook-reducer\"; // import storage from \"redux-persist/lib/storage\";\n// const myMiddleware = store => next => action =>  {\n//   console.log('My middleware', action);\n//   next(action)\n// }\n\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n}) // myMiddleware,\n// logger,\n]; // const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(contactsPersistConfig, phonebookReducer),\n// });\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer\n});\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: true // devTools: process.env.NODE_ENV === \"development\",\n\n}); // const persistor = persistStore(store);\n// const storeFunc = { store, persistor };\n// export default storeFunc;\n\nexport default store; //// WITHOUT REDUX TOOLKIT\n// import { createStore, combineReducers } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import phonebookReducer from \"./phonebook/phonebook-reducer\";\n// const rootReducer = combineReducers({\n//   phonebook: phonebookReducer,\n// });\n// const store = createStore(rootReducer, composeWithDevTools());\n// export default store;","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","combineReducers","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","phonebookReducer","middleware","serializableCheck","ignoredActions","rootReducer","contacts","store","reducer","devTools"],"mappings":"AAAA,SACEA,cADF,EAEEC,oBAFF,EAGEC,eAHF,QAIO,kBAJP,C,CAKA;;AACA,SACE;AACA;AACAC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,gBAAP,MAA6B,+BAA7B,C,CACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,CACjB,GAAGT,oBAAoB,CAAC;AACtBU,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACT,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,CAMnB;AACE;AAPiB,CAAnB,C,CAUA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMK,WAAW,GAAGX,eAAe,CAAC;AAClCY,EAAAA,QAAQ,EAAEL;AADwB,CAAD,CAAnC;AAKA,MAAMM,KAAK,GAAGf,cAAc,CAAC;AAC3BgB,EAAAA,OAAO,EAAEH,WADkB;AAE3BH,EAAAA,UAF2B;AAG3BO,EAAAA,QAAQ,EAAE,IAHiB,CAI3B;;AAJ2B,CAAD,CAA5B,C,CAOA;AAEA;AAEA;;AAEA,eAAeF,KAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA","sourcesContent":["import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\n// import logger from \"redux-logger\";\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\n// import storage from \"redux-persist/lib/storage\";\n\n// const myMiddleware = store => next => action =>  {\n//   console.log('My middleware', action);\n//   next(action)\n// }\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n// myMiddleware,\n  // logger,\n];\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(contactsPersistConfig, phonebookReducer),\n// });\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer,\n});\n\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: true,\n  // devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n\n// const storeFunc = { store, persistor };\n\n// export default storeFunc;\n\nexport default store;\n\n//// WITHOUT REDUX TOOLKIT\n// import { createStore, combineReducers } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import phonebookReducer from \"./phonebook/phonebook-reducer\";\n\n// const rootReducer = combineReducers({\n//   phonebook: phonebookReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n"]},"metadata":{},"sourceType":"module"}