{"ast":null,"code":"import axios from \"axios\";\nimport { addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, fetchContactsRequest, fetchContactsSuccess, fetchContactsError } from \"./phonebook-actions\";\naxios.defaults.baseURL = \"http://localhost:3000/\";\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/contacts\");\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number\n  };\n  dispatch(addContactRequest());\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/contacts\", contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nconst phonebookOperations = {};\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact\n}; // const fetchContacts = () => (dispatch) => {\n//   dispatch(fetchContactsRequest());\n//   axios\n//     .get(\"/contacts\")\n//     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n//     .catch((error) => dispatch(fetchContactsError(error)));\n// };\n// const addContact = (name, number) => (dispatch) => {\n//   const contact = { name, number };\n//   dispatch(addContactRequest());\n//   axios\n//     .post(\"/contacts\", contact)\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\n//     .catch((error) => dispatch(addContactError(error)));\n// };\n// const deleteContact = (contactId) => (dispatch) => {\n//   dispatch(deleteContactRequest());\n//   axios\n//     .delete(`/contacts/${contactId}`)\n//     .then(() => dispatch(deleteContactSuccess(contactId)))\n//     .catch((error) => dispatch(deleteContactError(error)));\n// };","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/redux/phonebook/phonebook-operations.js"],"names":["axios","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","defaults","baseURL","fetchContacts","dispatch","data","get","error","addContact","name","number","contact","post","deleteContact","contactId","delete","phonebookOperations"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,kBATF,QAUO,qBAVP;AAWAT,KAAK,CAACU,QAAN,CAAeC,OAAf,GAAyB,wBAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9CA,EAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,GAAN,CAAU,WAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACL,oBAAoB,CAACM,IAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACJ,kBAAkB,CAACO,KAAD,CAAnB,CAAR;AACD;AACF,CATD;;AAWA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB,MAAON,QAAP,IAAoB;AACvD,QAAMO,OAAO,GAAG;AAAEF,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAhB;AACAN,EAAAA,QAAQ,CAACZ,iBAAiB,EAAlB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACqB,IAAN,CAAW,WAAX,EAAwBD,OAAxB,CAAvB;AACAP,IAAAA,QAAQ,CAACX,iBAAiB,CAACY,IAAD,CAAlB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACV,eAAe,CAACa,KAAD,CAAhB,CAAR;AACD;AACF,CAVD;;AAYA,MAAMM,aAAa,GAAIC,SAAD,IAAe,MAAOV,QAAP,IAAoB;AACvDA,EAAAA,QAAQ,CAACT,oBAAoB,EAArB,CAAR;;AAEA,MAAI;AACF,UAAMJ,KAAK,CAACwB,MAAN,CAAc,aAAYD,SAAU,EAApC,CAAN;AACAV,IAAAA,QAAQ,CAACR,oBAAoB,CAACkB,SAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACP,kBAAkB,CAACU,KAAD,CAAnB,CAAR;AACD;AACF,CATD;;AAWA,MAAMS,mBAAmB,GAAG,EAA5B;AAEA,eAAe;AAAEb,EAAAA,aAAF;AAAiBK,EAAAA,UAAjB;AAA6BK,EAAAA;AAA7B,CAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\naxios.defaults.baseURL = \"http://localhost:3000/\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async (dispatch) => {\r\n  const contact = { name, number };\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = (contactId) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nconst phonebookOperations = {}\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n\r\n// const fetchContacts = () => (dispatch) => {\r\n//   dispatch(fetchContactsRequest());\r\n\r\n//   axios\r\n//     .get(\"/contacts\")\r\n//     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n//     .catch((error) => dispatch(fetchContactsError(error)));\r\n// };\r\n\r\n// const addContact = (name, number) => (dispatch) => {\r\n//   const contact = { name, number };\r\n\r\n//   dispatch(addContactRequest());\r\n\r\n//   axios\r\n//     .post(\"/contacts\", contact)\r\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\r\n//     .catch((error) => dispatch(addContactError(error)));\r\n// };\r\n\r\n// const deleteContact = (contactId) => (dispatch) => {\r\n//   dispatch(deleteContactRequest());\r\n\r\n//   axios\r\n//     .delete(`/contacts/${contactId}`)\r\n//     .then(() => dispatch(deleteContactSuccess(contactId)))\r\n//     .catch((error) => dispatch(deleteContactError(error)));\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}