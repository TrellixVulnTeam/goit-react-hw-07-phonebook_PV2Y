{"ast":null,"code":"import Filter from\"./components/Filter/Filter\";import ContactForm from\"./components/ContactForm/ContactForm\";import ContactList from\"./components/ContactList/ContactList\";import\"./styles.css\";import\"./App.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"phonebook\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Phonebook\"}),/*#__PURE__*/_jsx(ContactForm,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"Contacts\"}),/*#__PURE__*/_jsx(Filter,{}),/*#__PURE__*/_jsx(ContactList,{})]})})});};export default App;// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: '',\n//   };\n//   handleSearchChange = event => {\n//     this.setState({ filter: event.currentTarget.value });\n//   };\n//   formSubmitHandler = data => {\n//     const { name, number } = data;\n//     const normalizedName = name.toLowerCase();\n//     if (\n//       this.state.contacts.find(\n//         ({ name }) => name.toLowerCase() === normalizedName,\n//       )\n//     ) {\n//       return alert(`${name} is already in contacts.`);\n//     }\n//     this.setState(prevState => ({\n//       contacts: [\n//         ...prevState.contacts,\n//         { id: shortId.generate(), name, number },\n//       ],\n//     }));\n//   };\n//   getFilteredContacts = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n//   deleteContact = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     const parsedContacts = JSON.parse(contacts);\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n//   render() {\n//     const filteredContacts = this.getFilteredContacts();\n//     return (\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <div className=\"phonebook\">\n//             <h1>Phonebook</h1>\n//             <ContactForm\n//             onSubmit={this.formSubmitHandler}\n//             />\n//             <h2>Contacts</h2>\n//             <Filter\n//               value={this.state.filter}\n//               onChange={this.handleSearchChange}\n//             />\n//             <ContactList\n//               contacts={contacts}\n//               onDeleteContact={this.deleteContact}\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["E:/Github/react-01/goit-react-hw-07-phonebook/src/App.js"],"names":["Filter","ContactForm","ContactList","App"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sCAAxB,CACA,MAAO,cAAP,CACA,MAAO,YAAP,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,mBACE,YAAK,SAAS,CAAC,KAAf,uBACE,YAAK,SAAS,CAAC,WAAf,uBACE,aAAK,SAAS,CAAC,WAAf,wBACE,iCADF,cAEE,KAAC,WAAD,IAFF,cAGE,gCAHF,cAIE,KAAC,MAAD,IAJF,cAKE,KAAC,WAAD,IALF,GADF,EADF,EADF,CAaD,CAdD,CAgBA,cAAeA,CAAAA,GAAf,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport \"./styles.css\";\nimport \"./App.scss\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"phonebook\">\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: '',\n//   };\n\n//   handleSearchChange = event => {\n//     this.setState({ filter: event.currentTarget.value });\n//   };\n\n//   formSubmitHandler = data => {\n//     const { name, number } = data;\n//     const normalizedName = name.toLowerCase();\n\n//     if (\n//       this.state.contacts.find(\n//         ({ name }) => name.toLowerCase() === normalizedName,\n//       )\n//     ) {\n//       return alert(`${name} is already in contacts.`);\n//     }\n\n//     this.setState(prevState => ({\n//       contacts: [\n//         ...prevState.contacts,\n//         { id: shortId.generate(), name, number },\n//       ],\n//     }));\n//   };\n\n//   getFilteredContacts = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n\n//   deleteContact = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     const parsedContacts = JSON.parse(contacts);\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   render() {\n//     const filteredContacts = this.getFilteredContacts();\n//     return (\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <div className=\"phonebook\">\n//             <h1>Phonebook</h1>\n//             <ContactForm\n//             onSubmit={this.formSubmitHandler}\n//             />\n//             <h2>Contacts</h2>\n//             <Filter\n//               value={this.state.filter}\n//               onChange={this.handleSearchChange}\n//             />\n//             <ContactList\n//               contacts={contacts}\n//               onDeleteContact={this.deleteContact}\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}